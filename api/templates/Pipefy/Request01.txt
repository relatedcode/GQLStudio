https://api.pipefy.com/graphql

{
  "Authorization": "Bearer [ENTER YOUR API SECRET HERE]"
}

query GetAllCards($pipeId: ID!) {
	allCards(first: 10, pipeId: $pipeId){
		edges {
			cursor
			node {
				age attachments_count checklist_items_checked_count checklist_items_count comments_count createdAt created_at creatorEmail current_phase_age done due_date emailMessagingAddress expired finished_at id inboxEmailsRead late path started_current_phase_at suid title updated_at url uuid
				assignees { avatarUrl avatar_url created_at departmentKey displayName email hasUnreadNotifications id invited locale name timeZone time_zone username }
				attachments { createdAt path url }
				cardAssignees { assignedAt id }
				child_relations { id name source_type }
				comments { author_name created_at id text }
				createdBy { avatarUrl avatar_url created_at departmentKey displayName email hasUnreadNotifications id invited locale name timeZone time_zone username }
				created_by { avatarUrl avatar_url created_at departmentKey displayName email hasUnreadNotifications id invited locale name timeZone time_zone username }
				currentLateness { becameLateAt id shouldBecomeLateAt sla }
				current_phase { cards_count color created_at description done expiredCardsCount id index isDraft lateCardsCount name sequentialId }
				expiration { expiredAt shouldExpireAt }
				fields { array_value date_value datetime_value filled_at float_value indexName name report_value updated_at value }
				inbox_emails { bcc body cc clean_body clean_html clean_text from fromName from_name id main_to message_id raw_body raw_headers raw_html raw_text sent_via_automation state subject to updated_at }
				labels { color id name }
				parent_relations { id name source_type }
				phases_history { became_late created_at draft duration firstTimeIn lastTimeIn lastTimeOut }
				pipe { anyone_can_create_card cards_count clone_from_id color conditionExpressionsFieldIds create_card_label created_at description emailAddress expiration_time_by_unit expiration_unit icon id last_updated_by_card name only_admin_can_remove_cards only_assignees_can_edit_cards opened_cards_count organizationId public public_form public_form_active role suid users_count uuid }
				subtitles { array_value date_value datetime_value filled_at float_value indexName name report_value updated_at value }
				summary { title type value }
				summary_attributes { title type value }
				summary_fields { title type value }
			}
		}
		pageInfo { endCursor hasNextPage hasPreviousPage startCursor }
	}
}

{
	"pipeId": 301716008
}
